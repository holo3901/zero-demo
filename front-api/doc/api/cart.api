info(
    desc: "购物车"
    author: "koobe"
    email: "1002219331@qq.com"
)

type CartListReq struct {
    UserId int64 `path:"userId"`
}

type CartListResp struct {
    Errno int64 `json:"errno"`
    Data CartListData `json:"data"`
    Errmsg string `json:"errmsg"`
}

type CartListData struct {
    CartTotal CartTotal `json:"cartTotal"` //统计数据
    CartList []CartList `json:"cartList"`  //商品数据列表
}

type CartList struct {
    ID int64 `json:"id"`                            //id
    UserID int64 `json:"userId"`                    //用户Id
    GoodsID int64 `json:"goodsId"`                  //商品Id
    GoodsSn string `json:"goodsSn"`                 //商品编号
    GoodsName string `json:"goodsName"`             //商品名称
    ProductID int64 `json:"productId"`              //产品规格Id
    Price int64 `json:"price"`                      //价格
    Number int64 `json:"number"`                    //数量
    Specifications []string `json:"specifications"` //规格值
    Checked bool `json:"checked"`                   //是否选择
    PicURL string `json:"picUrl"`                   //图片
    AddTime string `json:"addTime"`                 //添加时间
    UpdateTime string `json:"updateTime"`           //更新时间
    Deleted bool `json:"deleted"`                   //是否删除
}

type CartTotal struct {
    GoodsCount int64 `json:"goodsCount"`                //商品总数
    CheckedGoodsCount int64 `json:"checkedGoodsCount"`  //选择的商品总数
}

type CartAddReq struct {
    IsDeleted bool `json:"IS_DELETED"`
    NotDeleted bool `json:"NOT_DELETED"`
    ID int64 `json:"id"`                            //id
    UserID int64 `json:"userId"`                    //用户Id
    GoodsID int64 `json:"goodsId"`                  //商品Id
    GoodsSn string `json:"goodsSn"`                 //商品编号
    GoodsName string `json:"goodsName"`             //商品名称
    ProductID int64 `json:"productId"`              //产品规格Id
    Price int64 `json:"price"`                      //价格
    Number int64 `json:"number"`                    //数量
    Specifications []string `json:"specifications"` //规格值
    Checked bool `json:"checked"`                   //是否选择
    PicURL string `json:"picUrl"`                   //图片
    AddTime string `json:"addTime"`                 //添加时间
    UpdateTime string `json:"updateTime"`           //更新时间
    Deleted bool `json:"deleted"`                   //是否删除
}
type CartAddResp struct {
    Errno int64 `json:"errno"`
    Errmsg string `json:"errmsg"`
}

type CartFastAddReq struct {
    IsDeleted bool `json:"IS_DELETED"`
    NotDeleted bool `json:"NOT_DELETED"`
    ID int64 `json:"id"`                            //id
    UserID int64 `json:"userId"`                    //用户Id
    GoodsID int64 `json:"goodsId"`                  //商品Id
    GoodsSn string `json:"goodsSn"`                 //商品编号
    GoodsName string `json:"goodsName"`             //商品名称
    ProductID int64 `json:"productId"`              //产品规格Id
    Price int64 `json:"price"`                      //价格
    Number int64 `json:"number"`                    //数量
    Specifications []string `json:"specifications"` //规格值
    Checked bool `json:"checked"`                   //是否选择
    PicURL string `json:"picUrl"`                   //图片
    AddTime string `json:"addTime"`                 //添加时间
    UpdateTime string `json:"updateTime"`           //更新时间
    Deleted bool `json:"deleted"`                   //是否删除
}
type CartFastAddResp struct {
    Errno int64 `json:"errno"`
    Data []CartFastAddData `json:"data"`
    Errmsg string `json:"errmsg"`
}

type CartFastAddData struct {

}

type CartCheckedReq struct {
    UserID int64 `json:"userId"`
    ProductIds []int64 `json:"productIds"`
    IsChecked int64 `json:"isChecked"`
}

type CartCheckOutReq struct {

    UserID int64 `json:"userId"`
    ProductIds []int64 `json:"productIds"`
}
type CartCheckOutResp struct {
    Errno int64 `json:"errno"`
    Data CartCheckOutData `json:"data"`
    Errmsg string `json:"errmsg"`
}

type CartCheckOutData struct {
    CheckedAddress CheckedAddress `json:"checkedAddress"`
    ActualPrice int64 `json:"actualPrice"`
    OrderTotalPrice int64 `json:"orderTotalPrice"`
    CartID int64 `json:"cartId"`
    FreightPrice int64 `json:"freightPrice"`
    CheckedGoodsList []CheckedGoodsList `json:"checkedGoodsList"`
    GoodsTotalPrice int64 `json:"goodsTotalPrice"`
    AddressID int64 `json:"addressId"`
}

type CheckedAddress struct {
    ID int64 `json:"id"`
}

type CheckedGoodsList struct {
    ID int64 `json:"id"`
    UserID int64 `json:"userId"`
    GoodsID int64 `json:"goodsId"`
    GoodsSn string `json:"goodsSn"`
    GoodsName string `json:"goodsName"`
    ProductID int64 `json:"productId"`
    Price int64 `json:"price"`
    Number int64 `json:"number"`
    Specifications []string `json:"specifications"`
    Checked bool `json:"checked"`
    PicURL string `json:"picUrl"`
    AddTime string `json:"addTime"`
    UpdateTime string `json:"updateTime"`
    Deleted bool `json:"deleted"`
}

type CartDeleteReq struct {
    UserId int64 `json:"userId"`
    ProductIds []int64 `json:"productIds"`
}

type CartUpdateReq struct {
    IsDeleted bool `json:"IS_DELETED"`
    NotDeleted bool `json:"NOT_DELETED"`
    ID int64 `json:"id"`
    UserID int64 `json:"userId"`
    GoodsID int64 `json:"goodsId"`
    GoodsSn string `json:"goodsSn"`
    GoodsName string `json:"goodsName"`
    ProductID int64 `json:"productId"`
    Price string `json:"price"`
    Number string `json:"number"`
    Specifications string `json:"specifications"`
    Checked bool `json:"checked"`
    PicURL string `json:"picUrl"`
    AddTime string `json:"addTime"`
    UpdateTime string `json:"updateTime"`
    Deleted bool `json:"deleted"`
}
type CartUpdateResp struct {
    Errno int64 `json:"errno"`
    Errmsg string `json:"errmsg"`
}

@server(
    //    jwt: Auth
    group: cart
    prefix: /api/cart
)
service front-api {
    @handler CartList
    get /index/:userId (CartListReq) returns (CartListResp)

    @handler CartAdd
    get /add (CartAddReq) returns (CartAddResp)

    @handler CartFastAdd
    get /fastadd (CartFastAddReq) returns (CartFastAddResp)

    @handler CartChecked
    get /checked (CartCheckedReq) returns (CartListResp)

    @handler CartCheckOut
    get /checkout (CartCheckOutReq) returns (CartCheckOutResp)

    @handler CartDelete
    get /delete (CartDeleteReq) returns (CartListResp)

    @handler CartUpdate
    get /update (CartUpdateReq) returns (CartUpdateResp)
}
