info(
    desc: "会员登录日志"
    author: "koobe"
    email: "1002219331@qq.com"
)

type (
    addMemberLoginLogReq struct {
        MemberId int64 `json:"memberId"`
        CreateTime string `json:"createTime"`
        Ip string `json:"ip"`
        City string `json:"city"`
        LoginType int64 `json:"loginType"` // 登录类型：0->PC；1->android;2->ios;3->小程序
        Province string `json:"province"`
    }
    addMemberLoginLogResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
    }
    ListMemberLoginLogReq struct {
        Current int64 `json:"current,default=1"`
        PageSize int64 `json:"pageSize,default=20"`
    }
    ListtMemberLoginLogData struct {
        Id int64 `json:"id"`
        MemberId int64 `json:"memberId"`
        CreateTime string `json:"createTime"`
        Ip string `json:"ip"`
        City string `json:"city"`
        LoginType int64 `json:"loginType"` // 登录类型：0->PC；1->android;2->ios;3->小程序
        Province string `json:"province"`
    }
    ListMemberLoginLogResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
        Current int64 `json:"current,default=1"`
        Data []*ListtMemberLoginLogData `json:"data"`
        PageSize int64 `json:"pageSize,default=20"`
        Success bool `json:"success"`
        Total int64 `json:"total"`
    }
    UpdateMemberLoginLogReq struct {
        Id int64 `json:"id"`
        MemberId int64 `json:"memberId"`
        CreateTime string `json:"createTime"`
        Ip string `json:"ip"`
        City string `json:"city"`
        LoginType int64 `json:"loginType"` // 登录类型：0->PC；1->android;2->ios;3->小程序
        Province string `json:"province"`
    }
    UpdateMemberLoginLogResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
    }
    DeleteMemberLoginLogReq struct {
        Id int64 `json:"id"`
    }
    DeleteMemberLoginLogResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
    }
)

@server(
    jwt: Auth
    middleware: CheckUrl
    group: member/loginlog
    prefix: /api/member/loginlog
)
service admin-api {
    @handler MemberLoginLogAdd
    post /add (addMemberLoginLogReq) returns (addMemberLoginLogResp)

    @handler MemberLoginLogList
    post /list (ListMemberLoginLogReq) returns (ListMemberLoginLogResp)

    @handler MemberLoginLogUpdate
    post /update (UpdateMemberLoginLogReq) returns (UpdateMemberLoginLogResp)

    @handler MemberLoginLogDelete
    post /delete (DeleteMemberLoginLogReq) returns (DeleteMemberLoginLogResp)
}
